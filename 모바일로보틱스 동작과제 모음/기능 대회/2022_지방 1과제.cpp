/************************************************************************************************************/
/*                                                                                                          */
/*                                              MobileRobot.c                                               */
/*                                                                                                          */
/*                                                                                       2020. 1. 1.        */
/************************************************************************************************************/
#include "Interface.h"


#define cw wa = 0;
#define ar acf =cacf= 0;
#define set pos[0] = pos[1] = pos[2] = 0; gyro = rearGyro = 0;
#define V3 while(!Cmd(0,19));
#define SV1 while(!Cmd(0,18));
#define reset bar_1 = bar_2 = bar_3 = bar_4 = bar_5 = 0;
#define wait if(key) {SS(); while(SW2); while(!SW2);}
#define lcs lcd_clear_screen();
int key= 0, key_puck = 0;

#define ab86(x) AB(0,0,6,200,8,138,x,30);
#define ab13(x) AB(0,0,1,177,3,177,x,0);
#define ab45(x) wa = 90; AB(0,0,4,221,5,180,x,30); cw
#define ab68(x) wa = 90; AB(0,0,6,199,8,136,x,30); cw
#define ab645(x) wa = 90; AB(6,159,4,211,5,177,x,30); cw
#define ab345(x) wa = 90; AB(3,164,4,224,5,186,x,30); cw
//#define ab345(x) wa = 90; AB(3,121,4,222,5,191,x,30); cw
#define ab745(x) wa = 90; AB(7 ,156,4,222,5,191,x,30); cw

int main(void)
{
   int t = 0, i = 0, g = 0;
   int p1 = 0, p2 = 0, p3 = 0;
   int gate = 1;

    Interface_init();

   write_gyro(0x1E, 1); // 지자기 OFF
   write_gyro(0x1E, 5); // 자이로 500dps   
   write_gyro(0x1E, 20); // 능동적 진동성분제거 OFF

   write_gyro(0x1E, 16); // 자이로 보정

   Camera_init();
   Setting(11);
   TM(50);
   V3

   _delay_ms(500);

   set

   LED_ON(3);
   _delay_ms(100);
   LED_OFF(3);

   while(1)
   {      
       if(SW1)
      {
         key--;
         LED_ON(3);
         _delay_ms(100);
         LED_OFF(3);

      }
       if(SW3)
      {
         key++;
         LED_ON(3);
         _delay_ms(100);
         LED_OFF(3);

      }
      
      
       if(SW2)
      {
         lcd_clear_screen();
         LED_ON(3);
         _delay_ms(100);
         LED_OFF(3);

         switch(key)
         {

case 0:
case 1:

ar ab645(30);

CPsd(12,1,30,3,11,0,45,60);      code = 0; co[0] = 0; 
CPsd(10,8,60,5,15,0,50,0);      lcs lcd(0,0,"t: %d", co[0]);
CPsd(8,8,100,3,15,30,50,0);      if(co[0]==1) t = 1; else t = 2;
Drift(1,40,-90,30,-40);

code = 0; co[0] = 0;
Avoid(0,11,15,0,15,30,40);

if(co[0] == 1 && t == 1){
   g = 1;   
    
   Drift(0,32,-90,30,-40);
   CPsd(12,8,20,3,15,0,40,50);
   CPsd(10,8,15,5,15,0,40,0);
   Drift(-1,30,90,30,-40);
}
else{
   g = 2;

   Axis(0,1,0,10,-20);
   Axis(0,-16,0,30,140);
   Drift(30,0,70,30,40);

   wa = -20;

   CPsd(12,4,-40,3,15,0,40,0);
   CPsd(10,4,-40,5,15,0,40,0);
   Axis(0,-13,0,40,-50);         
   Ad(1,22,-70,30,140,70); cw;

   Avoid(0,11,15,0,15,30,40);
   
   Drift(0,30,20,30,0);
   
   wa = 20;
   Drift(-35,9,-20,30,0);
   Axis(-1,0,0,30,-40);
   cw;
}

ar ab45(30);

Axis(10,0,0,20,130);
CPsd(12,8,4,3,20,0,20,30);
CPsd(10,8,4,5,20,0,20,-30);

SS(); SV1 V1(); V3
for(i=0; i<9; i++){
   if(!pro[i][1]) continue;
   if((abs(pro[i][1]-105)<20) && (abs(pro[i][2]-140)<20)) //1
      p1 = pro[i][0];
   if((abs(pro[i][1]-143)<20) && (abs(pro[i][2]-137)<20)) //2
      p2 = pro[i][0];
   if((abs(pro[i][1]-182)<20) && (abs(pro[i][2]-138)<20)) //3
      p3 = pro[i][0];
}
if(p1 == t){
   At(8,20);
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   At(-8,20);
   p1 = 0;
}
if(p2 == t){
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   p2 = 0;
}
if(p3 == t){
   At(-7,20);
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   At(7,20);
   p3 = 0;
}

Ad(20,-10,90,30,140,70);

CPsd(12,1,30,3,12,0,50,60);   
CPsd(10,8,30,5,13,0,50,0);   
CPsd(8,8,100,3,13,30,50,0);
Drift(0,37,-90,30,-40);

CPsd(12,8,10,3,14,0,50,60);   
CPsd(10,8,10,5,14,0,50,0);   
CPsd(8,8,100,3,14,30,50,0);
Drift(0,37,-90,30,-40);

case 2:

Axis(1,1,0,20,30); 
ar ab345(30);

CPsd(12,1,2,3,12,0,40,50);   
CPsd(10,1,2,5,12,0,40,0);   
Drift(1,45,-90,30,-40);

if(g_psd[5] > 20)   gate = 1;
else if(g_psd[3] > 30)   gate = 2;
else gate = 3;

CPsd(12,8,4,3,14,0,20,30);
CPsd(10,8,4,5,14,0,20,-30);

SS(); SV1 V1(); V3
for(i=0; i<9; i++){
   if(!pro[i][1]) continue;
   if((abs(pro[i][1]-105)<20) && (abs(pro[i][2]-140)<20)) //1
      p1 = pro[i][0];
   if((abs(pro[i][1]-143)<20) && (abs(pro[i][2]-137)<20)) //2
      p2 = pro[i][0];
   if((abs(pro[i][1]-182)<20) && (abs(pro[i][2]-138)<20)) //3
      p3 = pro[i][0];
}
if(p1 == t){
   At(8,20);
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   At(-8,20);
   p1 = 0;
}
if(p2 == t){
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   p2 = 0;
}
if(p3 == t){
   At(-7,20);
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   At(7,20);
   p3 = 0;
}

Ad(5,-9 ,70,30,140,60);
wa = -20;
Axis(0,-10,0,40,50);
CPsd(12,4,-10,3,15,0,40,0);
CPsd(10,4,-10,5,15,0,40,0);
Drift(0,-13,20,30,-40);
cw;

case 3:

Axis(1,1,0,10,120);
ar ab345(30);

lcs lcd(1,0,"gate: %d",gate);

if(gate==1){
   Axis(0,15,0,40,50);
   Drift(-1,30,90,30,-40);

   Avoid(0,11,15,0,25,30,40);
   Drift(0,20,-50,30,0);   wa = -50;
   Drift(32,10,55,30,-40); cw;   
   
   CPsd(12,8,20,3,14,0,40,50);
   CPsd(10,8,25,5,14,0,40,-50);
}
if(gate==2){
   CPsd(12,1,10,3,11,0,40,50);
   CPsd(10,1,10,5,11,0,40,0);
   CPsd(1,1,1000,5,11,30,40,0);
   Drift(-1,35,90,30,-40);

   Avoid(0,11,15,0,25,40,50);
   Axis(0,25 ,0,40,0);
   CPsd(12,8,20,3,14,0,40,0);
   CPsd(10,8,25,5,14,0,40,-50);
}
if(gate==3){
   CPsd(12,1,10,3,11,0,40,50);
   CPsd(10,1,10,5,11,0,40,0);
   CPsd(1,1,1000,5,11,30,40,0);
   Drift(-1,35,90,30,-40);

   Avoid(0,10,16,0,25,30,40);

   Drift(0,18,45,30,0);
   wa = 40;
   Drift(-30,11,-45,30,-40);
   cw;
   
   CPsd(12,8,20,3,14,0,40,50);
   CPsd(10,8,25,5,14,0,40,-50);
}

SS(); SV1 V1(); V3
for(i=0; i<9; i++){
   if(!pro[i][1]) continue;
   if((abs(pro[i][1]-109)<20) && (abs(pro[i][2]-133)<20)) //1
      p1 = pro[i][0];
   if((abs(pro[i][1]-147)<20) && (abs(pro[i][2]-134)<20)) //2
      p2 = pro[i][0];
   if((abs(pro[i][1]-183)<20) && (abs(pro[i][2]-133)<20)) //3
      p3 = pro[i][0];
}
if(p1 == t){
   At(7,20);
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   At(-7,20);
   p1 = 0;
}
if(p2 == t){
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   p2 = 0;
}
if(p3 == t){
   At(-7,20);
   Axis(0,10,0,20,130);
   Axis(0,-10,0,20,130);
   At(7,20);
   p3 = 0;
}
/*
Ad(0,5,-20,20,130,60); wa = -20;
CPsd(12,4,-2,3,14,0,30,40);
CPsd(10,4,-2,5,14,0,30,0);
CPsd(4,4,-1000,3,14,0,30,0);
Axis(0,-47,0,30,-40);

Drift(-40,0,-50,30,40); wa = 20;
CPsd(12,5,-10,3,11,0,40,0);
CPsd(10,5,-10,5,11,0,40,0);
Drift(0,-20,-20,40,-50); cw;

Axis(-1,1,0,10,120);
ar ab645(30);
*/


Ad(0,10,20,30,140,60); wa=20;
CPsd(12,5,-3,3,11,0,40,50);
CPsd(10,5,-3,5,11,0,40,0);
CPsd(5,5,-1000,3,11,0,40,0);
Axis(0,-30,0,40,0);
Ot(-20,89,10,35,0); wa=30;
Ad(15,0,60,40,-50,70); cw

Avoid(0,10,14,0,65,40,50);

if(g_psd[7]>35){
   Ad(0,3,-90,50,-60,130); wa=-90;
   Ot(15,-90,0,35,45); cw
   CPsd(12,8,2,3,15,0,40,0);
   CPsd(10,8,2,5,15,0,40,0);
   CPsd(0,8,1000,3,15,30,40,0);
   Ad(-1,25,90,40,-50,100);
   Axis(-1,1,0,10,120);
   ar ab645(30);
   Drift(2,28,-90,30,140);

   CPsd(12,1,15,3,11,0,40,50);
   CPsd(10,1,15,5,11,0,40,0);
}
else{
   Drift(3,48,-90,30,-40);
   Axis(2,2,0,10,120);
   ar ab345(30);

   CPsd(12,1,5,3,11,0,30,40);
   CPsd(10,1,5,5,11,0,30,0);
   CPsd(0,1,1000,3,11,30,30,0);
   Ad(1,30,-90,30,-40,100);
   Axis(1,1,0,10,120);
   ar ab345(30);
   
   Drift(0,10,20,30,40); wa=20;
   Ot(20,90,90,25,0);
   Drift(0,30,70,30,-40); cw
   Drift(5,30,-90,30,140);

   CPsd(12,1,1,3,11,0,40,50);
   CPsd(10,1,1,5,11,0,40,0);
}

case 4:

CPsd(-7,1,1000,3,11,8,40,0); 
Axis(0,2,0,30,-40);

ar ab13(20);

if(T(-102, 2) == t){
   At(7,20);
   Axis(0,7,0,20,130);
   Axis(0,-7,0,20,130);
   At(-7,20);
}
if(T(102, 2) == t){
   At(-7,20);
   Axis(0,7,0,20,130);
   Axis(0,-7,0,20,130);
   At(7,20);
}

At(20,40); wa=20;
CPsd(12,3,-3,3,15,0,30,40);
CPsd(10,3,-3,5,15,0,30,0);
Axis(0,-13,0,30,-40);
Drift(40,0,70,30,140);

wa=-90;
Ot(-7,-90,20,20,30); wa=20;
CPsd(12,3,-10,3,15,0,30,0);
CPsd(10,3,-10,5,15,0,30,0);
Drift(0,-15,-20,30,-40);cw;
Drift(2,30,-90,30,140);

CPsd(12,1,1,3,14,0,20,30); 
CPsd(10,1,1,5,14,0,20,0); 
CPsd(-2,1,1000,3,14,8,20,-30);

if(T(-102, 2) == t){
   At(16,20);
   Axis(0,11,0,20,130);
   Axis(0,-11,0,20,130);
   At(-16,20);
}
if(T(102, 2) == t){
   At(-16,20);
   Axis(0,11,0,20,130);
   Axis(0,-11,0,20,130);
   At(16,20);
}

Ad(-5,-13,-90,30,140,60);
CPsd(12,8,10,3,15,0,40,50); 
CPsd(10,8,10,5,15,0,40,0);
Axis(0,7,0,40,0); 
Drift(-1,30,90,25,-30);

CPsd(12,8,1,3,17,0,20,30); 
CPsd(10,8,1,5,17,0,20,0); 
CPsd(-7,8,1000,3,17,8,20,-30);

if(T(-102, 2) == t){
   At(16,25);
   Axis(0,11,0,20,130);
   Axis(0,-11,0,20,130);
   At(-16,25);
}
if(T(102, 2) == t){
   At(-16,25);
   Axis(0,11,0,20,130);
   Axis(0,-11,0,20,130);
   At(16,25);
}
Ad(-15,-5,-90,30,140,60);
Axis(11,25,0,30,40);
Drift(-2,45,90,30,-40);

CPsd(12,8,1,3,14,0,20,30); 
CPsd(10,8,1,5,14,0,20,0); 
CPsd(-2,8,1000,3,14,8,20,-30);

ar ab86(20);

if(T(-102, 2) == t){
   At(7,20);
   Axis(0,8,0,20,130);
   Axis(0,-8,0,20,130);
   At(-7,20);
}
if(T(102, 2) == t){
   At(-7,20);
   Axis(0,8,0,20,130);
   Axis(0,-8,0,20,130);
   At(7,20);
}

Axis(0,0,-20,60,130); wa=-20;
CPsd(12,6,-10,3,11,0,40,50);

if(g_psd[5]>45) {
   CPsd(10,6,-10,5,11,0,40,0);
   CPsd(-5,6,-1000,3,11,25,40,0);
   Axis(0,-17,0,40,-50);
   Drift(-30,-1,-50,40,150); wa=-70;
   Drift(0,-31,50,40,50); wa=-20;
   Ot(-20,90,90,35,0);
   Drift(0,-8,20,40,-50); cw
}
else {
   CPsd(10,6,-7,5,11,0,40,-50);
   Drift(-30,-2,-50,30,140); wa=20;
   Ad(-5,-15,-40,30,140,70); wa=-20;
   Ad(5,15,-70,30,140,90); cw
   CPsd(12,8,5,3,14,0,30,40);
   CPsd(10,8,5,5,14,0,30,0);
   CPsd(0,8,1000,3,14,30,30,0);
   Ad(-1,23,90,30,-40,130);
   Axis(-2,2,0,10,120);
   ar ab645(30)
   //Axis(2,0,0,10,120);
   Drift(2,25,-90,30,140);
   CPsd(12,1,5,3,11,0,30,40);
   CPsd(10,1,5,5,11,0,30,0);
   CPsd(0,1,1000,3,11,30,40,0);
   Ad(1,23,-90,30,-40,130);
   Axis(0,2,0,10,120);
}

case 5:

ar ab345(30);

if(gate==3){
   Axis(0,15,0,40,50);
   Drift(-1,30,90,30,-40);

   Avoid(0,11,15,0,20,30,40);
   Drift(0,30,90,30,-40);

   CPsd(12,8,1,3,12,0,40,50);
   CPsd(10,8,1,5,12,0,40,0);
   CPsd(8,8,1000,3,12,30,40,0);
   Drift(0,37,-90,30,-40);
}
if(gate==2){
   CPsd(12,1,10,3,11,0,40,50);
   CPsd(10,1,10,5,11,0,40,0);
   CPsd(1,1,1000,5,11,30,40,0);
   Drift(-1,35,90,30,-40);

   Avoid(0,11,15,0,20,30,40);
   Drift(0,30,90,30,-40);

   CPsd(12,8,1,3,12,0,40,50);
   CPsd(10,8,1,5,12,0,40,0);
   CPsd(8,8,1000,3,12,30,40,0);
   Drift(0,37,-90,30,-40);
}
if(gate==1){
   CPsd(12,1,10,3,11,0,40,50);
   CPsd(10,1,10,5,11,0,40,0);
   CPsd(1,1,1000,5,11,30,40,0);
   Drift(-1,35,90,30,-40);

   Avoid(0,11,15,0,20,30,40);
   Drift(0,30,90,30,-40);

   CPsd(12,1,1,3,13,0,40,50);
   CPsd(10,1,1,5,13,0,40,0);
   CPsd(8,1,1000,3,13,30,40,0);
   Drift(0,37,-90,30,-40);
}
CPsd(12,1,10,3,13,0,50,60);   
CPsd(10,1,10,5,13,0,50,0);   
CPsd(8,1,100,3,13,30,50,0);
Drift(1,35,-90,30,-40);

case 6:

Axis(1,1,0,10,120);
ar ab345(30);

if(g == 1){
   Axis(0,30,0,40,50);
   CPsd(12,1,10,3,13,0,40,0);   
   CPsd(10,1,10,5,13,0,40,0);   
   CPsd(1,1,100,3,13,30,40,0);
   Drift(0,30,90,30,-40);

   Avoid(0,10,15,0,20,30,40);
   Drift(0,30,-90,30,-40);
}
else if(g == 2){
   Drift(0,30,90,30,140);
   Avoid(0,10,15,0,20,30,40);
   Drift(0,30,-90,30,-40);

   CPsd(12,1,40,3,13,0,40,50);
   CPsd(10,1,50,5,13,0,40,0);
}

if(T(101,2)==t){
   Axis(0,15,0,40,0);
}
Axis(0,0,-20,60,130);

wa = -20;
CPsd(12,4,-50,3,15,0,50,60);
CPsd(10,4,-50,5,15,0,50,0);
Drift(0,-35,20,30,-40); cw

LED_ON(3);
_delay_ms(2000);
LED_OFF(3);


SS();
while(!SW2);
while(SW2);

         }
      }
      if(key){
         lcd(0,0,"%03d %03d %03d %03d %03d",g_psd[2],g_psd[1],g_psd[0],g_psd[8],g_psd[7]);
         lcd(1,0,"%03d %03d     %03d %03d",g_psd[3],g_psd[4],g_psd[5],g_psd[6]);
      }
      else{
         lcd(0,0,"%03d %03d %03d %03d %03d",psd[2],psd[1],psd[0],psd[8],psd[7]);
         lcd(1,0,"%03d %03d     %03d %03d",psd[3],psd[4],psd[5],psd[6]);
      }
      key_puck = abs(key) %9;

      get_gyro();
      lcd(2,0,"C%d X%3d Y%3d S%2d",key_puck,Cmd(key_puck,102),Cmd(key_puck,103),Cmd(key_puck,104));      
      lcd(3,0,"%d%d%d%d%d| G%04d",IR_4,IR_1,IR_2,IR_3,IR_5,(int)gyro);
      lcd(3,16,"k:%02d",key);
   }
}


